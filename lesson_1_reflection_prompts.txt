How did viewing a diff between two versions of a file help you see the bug that
was introduced?

    Only the differences of the files were shown in the output.

How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?

    I could easily get older working version in to use if a new version fails.
    So its easy to try new features for the program. 

What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved, like Google
docs does?

    I can commit the code when a logical part of the code is ready.

Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?

    Some features might need modifications to several files to get the 
    compilation succeed and the program to work.

How can you use the commands git log and git diff to view the history of files?

    git log shows the comments of each commit. git diff shows the code changes
    of each commit.

How might using version control make you more confident to make changes that
could break something?

    I can make a new branch for the change and merge it to the main branch when 
    it is ready. I also can get the previous, working version in to use easily.

Now that you have your workspace set up, what do you want to try using Git for?

    Committing code changes.
